<UserControl x:Class="Wada.AchievementEntry.Views.AchievementEntryPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewmodels="clr-namespace:Wada.AchievementEntry.ViewModels"
             xmlns:models="clr-namespace:Wada.AchievementEntry.Models"
             xmlns:converters="clr-namespace:Wada.AchievementEntry.Converters"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             xmlns:prism="http://prismlibrary.com/"
             d:DesignHeight="400" d:DesignWidth="800"
             d:Background="LightGray"
             d:DataContext="{d:DesignInstance Type=viewmodels:AchievementEntryPageViewModel}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             FontSize="16"
             xml:lang="ja-JP">
    <UserControl.Resources>
        <!-- BooleanをVisibility列挙型に変換するコンバータ 組み込みコンバータ -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!--複数のコンバーターをまとめる定義-->
        <converters:ValueConverterGroup x:Key="NegativeBooleanToVisibilityConverter">
            <converters:BooleanNegativeConverter />
            <BooleanToVisibilityConverter />
        </converters:ValueConverterGroup>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="Info" Messenger="{Binding Messenger}">
            <!-- [Livet]非アクティブ時におけるWindowInteractionMessageActionの注意点 https://todosoft.net/blog/?p=487 -->
            <l:InformationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="Confirm" Messenger="{Binding Messenger}">
            <l:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>
        
        <!-- ウィンドウをアクティブにする -->
        <l:InteractionMessageTrigger MessageKey="Active" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False">
                <l:DirectInteractionMessage>
                    <l:WindowActionMessage Action="Active" />
                </l:DirectInteractionMessage>
            </l:WindowInteractionMessageAction>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <TextBlock DockPanel.Dock="Top"
                   Margin="5"
                   Text="日報エクセルファイル取込"/>

        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="クリア(_C)"
                    MinWidth="70"
                    Margin="5"
                    Padding="5"
                    Command="{Binding ClearCommand}"/>
            <Button Content="登録(_E)"
                    MinWidth="70"
                    Margin="5"
                    Padding="5"
                    Style="{StaticResource MaterialDesignRaisedSecondaryLightButton}"
                    Command="{Binding EntryCommand}"/>
        </StackPanel>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ListView Margin="5"
                      x:Name="XlsxPath"
                      ToolTip="日報をドロップしてください"
                      ItemsSource="{Binding AchievementCollections}"
                      d:ItemsSource="{d:SampleData}"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.ScrollUnit="Pixel"
                      dd:DragDrop.IsDropTarget="True"
                      dd:DragDrop.DropHandler="{Binding}">
                <ListView.View>
                    <GridView>
                        <!-- GridViewColumnにCheckBoxを追加する -->
                        <GridViewColumn Header="選択">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Margin="5,3,5,0" IsChecked="{Binding CheckedItem.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:IsChecked="True"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="実績日付" DisplayMemberBinding="{Binding AchievementDate.Value, StringFormat={}{0:yyyy/M/d(ddd)}}" d:DisplayMemberBinding="{d:Binding}"/>
                        <GridViewColumn Header="社員名" DisplayMemberBinding="{Binding EmployeeName.Value}" d:DisplayMemberBinding="{d:Binding}"/>
                        <GridViewColumn Header="エラー">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ListBox ItemsSource="{Binding ValidationResults}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="0,0,5,0"
                                                               Text="{Binding Message.Value}"
                                                               d:Text="{d:Binding}"
                                                               Foreground="Red"/>
                                                    <TextBlock Margin="0,0,5,0"
                                                               Text="{Binding WorkingNumber.Value}"
                                                               d:Text="{d:Binding}"
                                                               Foreground="Red"/>
                                                    <TextBlock Margin="0,0,5,0"
                                                               Text="{Binding JigCode.Value}"
                                                               d:Text="{d:Binding}"
                                                               Foreground="Red"/>
                                                    <TextBlock Margin="0,0,5,0"
                                                               Text="{Binding Note.Value}"
                                                               d:Text="{d:Binding}"
                                                               Foreground="Red"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <TextBlock HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{Binding ToolTip, ElementName=XlsxPath}"
                       Visibility="{Binding HasItems, ElementName=XlsxPath, Converter={StaticResource NegativeBooleanToVisibilityConverter}}"
                       d:Text="ErrorMsgDropSpreadSheet"
                       Foreground="Red"
                       FontWeight="Bold"
                       TextWrapping="Wrap"/>
            <StackPanel Grid.Row="1" HorizontalAlignment="Right">
                <CheckBox Margin="5" Content="設計情報に追加する"
                          IsChecked="{Binding AddingDesignManagementIsChecked.Value}"/>
            </StackPanel>
        </Grid>
    </DockPanel>
</UserControl>
